


===========    DE::Vector2    ===========

a = (0, 1)

b = (4, 5)

c = (1, 2)

d = (0, 0)




===========    OPERATORS    ===========

[ OK ]	a + a
	result: (0, 2)
	expected: (0, 2)

[ OK ]	a - a
	result: (0, 0)
	expected: (0, 0)

[ OK ]	b * a
	result: (0, 5)
	expected: (0, 5)

[ OK ]	b / DE::Vector2(2,2)
	result: (2, 2.5)
	expected: (2, 2.5)

[ OK ]	DE::Vector2(a) -= a
	result: (0, 0)
	expected: (0, 0)

[ OK ]	DE::Vector2(a) += a
	result: (0, 2)
	expected: (0, 2)

[ OK ]	DE::Vector2(a) *= a
	result: (0, 1)
	expected: (0, 1)

[ OK ]	DE::Vector2(a) /= DE::Vector2(2,2)
	result: (0, 0.5)
	expected: (0, 0.5)

[ OK ]	a == a
	result: 1
	expected: 1

[ OK ]	a == b
	result: 0
	expected: 0

[ OK ]	a != a
	result: 0
	expected: 0

[ OK ]	a != b
	result: 1
	expected: 1




===========    ARRAY ACCESS    ===========

[ OK ]	a[0]
	result: 0
	expected: 0

[ OK ]	a[1]
	result: 1
	expected: 1




===========    FUNCTIONS    ===========

[ OK ]	DE::Vector2(a).add(a)
	result: (0, 2)
	expected: (0, 2)

[ OK ]	DE::Vector2(a).sub(a)
	result: (0, 0)
	expected: (0, 0)

[ OK ]	DE::Vector2(a).mul(DE::Vector2(2,2))
	result: (0, 2)
	expected: (0, 2)

[ OK ]	DE::Vector2(a).div(DE::Vector2(2,2))
	result: (0, 0.5)
	expected: (0, 0.5)

[ OK ]	DE::Vector2(a).add(1)
	result: (1, 2)
	expected: (1, 2)

[ OK ]	DE::Vector2(a).sub(1)
	result: (-1, 0)
	expected: (-1, 0)

[ OK ]	DE::Vector2(a).mul(2)
	result: (0, 2)
	expected: (0, 2)

[ OK ]	DE::Vector2(a).div(2)
	result: (0, 0.5)
	expected: (0, 0.5)

c.div(2) = (0.5, 1)

[ OK ]	c
	result: (0.5, 1)
	expected: (0.5, 1)

[ OK ]	DE::Vector2(b).lerp(a, 0.5f)
	result: (2, 3)
	expected: (2, 3)

[ OK ]	DE::Vector2(b).lerp(a, 0.1f)
	result: (3.599999905, 4.599999905)
	expected: (3.599999905, 4.599999905)

[ OK ]	DE::Vector2(b).lerp(a, 0.823f)
	result: (0.7079999447, 1.707999945)
	expected: (0.7079999447, 1.707999945)

[ OK ]	a.dot(a)
	result: 1
	expected: 1

[ OK ]	a.dot(b)
	result: 5
	expected: 5

[ OK ]	a.sqrlen()
	result: 1
	expected: 1

[ OK ]	a.len()
	result: 1
	expected: 1

[ OK ]	a.max()
	result: 1
	expected: 1

[ OK ]	a.min()
	result: 0
	expected: 0

[ OK ]	a.sqrdst(b)
	result: 32
	expected: 32

[ OK ]	a.dst(b)
	result: 5.656854153
	expected: 5.656854153

[ OK ]	a.eq(b,0)
	result: 0
	expected: 0

[ OK ]	a.eq(b,10)
	result: 1
	expected: 1

[ OK ]	DE::Vector2(a).nor()
	result: (0, 1)
	expected: (0, 1)

[ OK ]	a.angle(a)
	result: 0
	expected: 0

[ OK ]	DE::Vector2(1,0).angle(DE::Vector2(0,1))*(180/3.14159265358979323846)
	result: 90
	expected: 90

[ OK ]	DE::Vector2(1,0).angle(DE::Vector2(1,1))*(180/3.14159265358979323846)
	result: 45
	expected: 45

[ OK ]	DE::Vector2(1,0).angle(DE::Vector2(1,-1))*(180/3.14159265358979323846)
	result: 315
	expected: 315

[ OK ]	DE::Vector2(1,0).angle(DE::Vector2(-1,0))*(180/3.14159265358979323846)
	result: 180
	expected: 180

[ OK ]	DE::Vector2(a).clamp(0.1f).len()
	result: 0.1000000015
	expected: 0.1000000015
	epsilon: 0.1000000015

[ OK ]	DE::Vector2(a).clamp(0.2f).len()
	result: 0.200000003
	expected: 0.200000003
	epsilon: 0.1000000015

[ OK ]	DE::Vector2(a).clamp(0.3f).len()
	result: 0.3000000119
	expected: 0.3000000119
	epsilon: 0.1000000015

[ OK ]	DE::Vector2(a).clamp(0.4f).len()
	result: 0.400000006
	expected: 0.400000006
	epsilon: 0.1000000015

[ OK ]	DE::Vector2(a).clamp(0.5f).len()
	result: 0.5
	expected: 0.5
	epsilon: 0.1000000015


0.015838 47 0
